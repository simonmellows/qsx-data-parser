/*******************************************************************************************
  SIMPL+ Module Information
  (Fill in comments below)
*******************************************************************************************/
/*
Dealer Name: Control Concepts, Inc. (Edited by CF)
Programmer: MFS (Edited by SCM)
Comments:
	- Comments marked *CF are where edits are located
*/

/*******************************************************************************************
  Compiler Directives
  (Uncomment and declare compiler directives as needed)
*******************************************************************************************/

#SYMBOL_NAME "Lutron HomeWorks QSX Zone Control v1.2 (CF v1.0)"

#CATEGORY "0" 


#DEFAULT_VOLATILE
#ENABLE_STACK_CHECKING
#ENABLE_TRACE

#DIGITAL_EXPAND InputsWithParams

/*
#HELP_BEGIN
   (add additional lines of help lines)
#HELP_END
*/

/*******************************************************************************************
  Include Libraries
  (Uncomment and include additional libraries as needed)
*******************************************************************************************/
#USER_SIMPLSHARP_LIBRARY "Lutron.Leap.CommLib"

/*******************************************************************************************
  DIGITAL, ANALOG and SERIAL INPUTS and OUTPUTS
  (Uncomment and declare inputs and outputs as needed)
*******************************************************************************************/
// *CF - Added 'Init' digital input to trigger initialation of module (as opposed to within main function)
DIGITAL_INPUT _SKIP_,_SKIP_,_SKIP_, _SKIP_, Init,_SKIP_;
DIGITAL_INPUT DimLevel_Raise, DimLevel_Lower, _SKIP_;
DIGITAL_INPUT Switch_On, Switch_Off, _SKIP_;
DIGITAL_INPUT Set_DimLevel, _SKIP_;
DIGITAL_INPUT CCOLevel_Open, CCOLevel_Close, _SKIP_;
ANALOG_INPUT DimLevel;
ANALOG_INPUT FadeTime, _skip_;
// *CF - Added String version of Href
STRING_INPUT Zone_Href_ID$[255];

DIGITAL_OUTPUT _SKIP_,_SKIP_,_SKIP_,_SKIP_;
DIGITAL_OUTPUT Is_Initialized,_SKIP_,_SKIP_,_SKIP_,_SKIP_;
DIGITAL_OUTPUT Switch_On_Fb,Switch_Off_Fb,_SKIP_, _SKIP_, _SKIP_;
DIGITAL_OUTPUT CCOLevel_Is_Open, CCOLevel_Is_Closed;
ANALOG_OUTPUT _SKIP_,DimLevel_Fb,FadeTime_Fb;

/*******************************************************************************************
  Parameters
  (Uncomment and declare parameters as needed)
*******************************************************************************************/

INTEGER_PARAMETER Command_Processor_ID, Zone_Mode;
SIGNED_INTEGER_PARAMETER Fade_Time;
// *CF - Commented out parameter as replaced by string version
//LONG_INTEGER_PARAMETER Zone_Href_ID;

/*******************************************************************************************
  Parameter Properties
  (Uncomment and declare parameter properties as needed)
*******************************************************************************************/
#BEGIN_PARAMETER_PROPERTIES Command_Processor_ID
   propValidUnits = unitDecimal;
   propDefaultUnit = unitDecimal;
   propBounds = 1d , 10d;
   propDefaultValue = 1d;
#END_PARAMETER_PROPERTIES

// *CF - Commented out parameter properties
/*#BEGIN_PARAMETER_PROPERTIES Zone_Href_ID
   propValidUnits = unitDecimal;
   propDefaultUnit = unitDecimal;
   propDefaultValue = 0d;
#END_PARAMETER_PROPERTIES*/

#BEGIN_PARAMETER_PROPERTIES Zone_Mode
   propValidUnits = unitDecimal;
   propDefaultUnit = unitDecimal;
   propBounds = 1d, 3d;
   propDefaultValue = 1d;
#END_PARAMETER_PROPERTIES
                
#BEGIN_PARAMETER_PROPERTIES Fade_Time
   propValidUnits = unitDecimal;
   propDefaultUnit = unitDecimal;
   propBounds = 0d , 14400d;
   propDefaultValue = 2d;
#END_PARAMETER_PROPERTIES

/*******************************************************************************************
  Global Variables
  (Uncomment and declare global variables as needed)
  Note:  Be sure to initialize all declared STRING variables as needed
         For example, in Function Main: myString = "";
*******************************************************************************************/
ZoneComponent component;
/*******************************************************************************************
  Functions
  (Add any additional functions here)
  Note:  Functions must be physically placed before the location in
         the code that calls them.
*******************************************************************************************/
EVENTHANDLER OnInitializationChange(ZoneComponent sender, InitializationEventArgs args)
{
	Is_Initialized = args.Payload;
}

EVENTHANDLER OnSwitchedLevelChange(ZoneComponent sender, SwitchedLevelEventArgs args)
{
	Switch_On_Fb = (args.Payload = SwitchedLevel.On);
	Switch_Off_Fb = (args.Payload = SwitchedLevel.Off);
}
          
EVENTHANDLER OnDimLevelChange(ZoneComponent sender, DimLevelEventArgs args)
{
	DimLevel_Fb = args.Payload;
}

EVENTHANDLER OnCCOLevelChange(ZoneComponent sender, CCOLevelEventArgs args)
{
	CCOLevel_Is_Open = (args.Payload = CCOLevel.Open);
	CCOLevel_Is_Closed = (args.Payload = CCOLevel.Closed);
}

/*******************************************************************************************
  Event Handlers
  (Uncomment and declare additional event handlers as needed)
*******************************************************************************************/
PUSH DimLevel_Raise
{
	component.Raise();
}
PUSH DimLevel_Lower
{
	component.Lower();
}

RELEASE DimLevel_Raise, DimLevel_Lower
{
	component.Stop();
}
                                     

PUSH Switch_On
{
	component.SwitchOn();
}


PUSH Switch_Off
{
	component.SwitchOff();
}
 
PUSH CCOLevel_Open
{
 	component.CCOLevelOpen();
}

PUSH CCOLevel_Close
{
	component.CCOLevelClose();
}

// *CF - Added function to initialize module as opposed to initialize
PUSH Init
{
 	// *CF - Created long integer to store converted string href
	Long_Integer Zone_Href_ID;
                                    
	// VALUE WAS NOT SET!
	IF (component.FadeTime < 0)
		component.FadeTime = Fade_Time;

	FadeTime_Fb = component.FadeTime;
	
	RegisterEvent(component, OnInitializationChange, OnInitializationChange);
	RegisterEvent(component, OnSwitchedLevelChange, OnSwitchedLevelChange);
	RegisterEvent(component, OnDimLevelChange, OnDimLevelChange);
	RegisterEvent(component, OnCCOLevelChange, OnCCOLevelChange);
	
	// *CF - Convert string Href to long integer
	Zone_Href_ID = Atol(Zone_Href_ID$);
	
	component.Configure(Command_Processor_ID, Zone_Mode, Zone_Href_ID);

}


RELEASE Set_DimLevel
{
	IF (DimLevel != DimLevel_Fb)
	{
		component.SetDimLevel(DimLevel);
	}
}

THREADSAFE CHANGE DimLevel
{
 	IF (Set_DimLevel)
	{
		component.SetDimLevel(DimLevel);		
		DELAY(10);
	}
}

CHANGE FadeTime
{
	// Homeworks has a 4hr limit (Seconds
	IF (FadeTime >=0 && FadeTime <= 14400)
	{
		component.FadeTime = FadeTime;

		FadeTime_Fb = component.FadeTime;
	}
}

/*******************************************************************************************
  Main()
  Uncomment and place one-time startup code here
  (This code will get called when the system starts up)
*******************************************************************************************/
// *CF - Moved contents of Main function to Init event (triggered by digital input 'Init')
Function Main()
{
	WaitForInitializationComplete();
	
}

